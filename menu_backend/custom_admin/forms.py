from django import forms
from .models import Employee, Booking

from .models import Task

from django import forms
from .models import Task


from django import forms
from django.contrib.auth.models import User

from django import forms
from .models import Employee

class ConfirmOrderForm(forms.Form):
    employee = forms.ModelChoiceField(
        queryset=Employee.objects.all(),
        label="–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞",
        empty_label="–í—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞",
        widget=forms.Select(attrs={'class': 'form-control'})
    )










class AdminRegistrationForm(forms.ModelForm):
    password = forms.CharField(widget=forms.PasswordInput)
    password_confirm = forms.CharField(widget=forms.PasswordInput, label="–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–∞—Ä–æ–ª—è")

    class Meta:
        model = User
        fields = ["username", "email", "password"]

    def clean(self):
        cleaned_data = super().clean()
        password = cleaned_data.get("password")
        password_confirm = cleaned_data.get("password_confirm")

        if password and password_confirm and password != password_confirm:
            raise forms.ValidationError("–ü–∞—Ä–æ–ª–∏ –Ω–µ —Å–æ–≤–ø–∞–¥–∞—é—Ç!")

        return cleaned_data

class TaskForm(forms.ModelForm):
    class Meta:
        model = Task
        fields = ['description', 'room', 'date', 'time', 'end_time', 'employee']  # üëà end_time –≤–∫–ª—é—á–µ–Ω–æ
        widgets = {
            'date': forms.DateInput(attrs={'type': 'date'}),
            'time': forms.TimeInput(attrs={'type': 'time'}),
            'end_time': forms.TimeInput(attrs={'type': 'time'}),  # üëà –î–æ–±–∞–≤–ª–µ–Ω–æ end_time
        }

from django import forms
from .models import Employee

class EmployeeForm(forms.ModelForm):
    class Meta:
        model = Employee
        fields = '__all__'
        widgets = {
            'color': forms.Select(attrs={'class': 'form-control'}),
            'full_name': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–í–≤–µ–¥–∏—Ç–µ –§–ò–û'}),
            'phone_number': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞'}),
            # 'telegram_user': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–í–≤–µ–¥–∏—Ç–µ —Ç–µ–ª–µ–≥—Ä–∞–º-—é–∑–µ—Ä'}),
            'position': forms.TextInput(attrs={'class': 'form-control', 'placeholder': '–í–≤–µ–¥–∏—Ç–µ –¥–æ–ª–∂–Ω–æ—Å—Ç—å'}),
            'user_id_tg': forms.NumberInput(attrs={'class': 'form-control', 'placeholder': '–í–≤–µ–¥–∏—Ç–µ Telegram ID'}),
        }

# class EmployeeForm(forms.ModelForm):
#     class Meta:
#         model = Employee
#         fields = '__all__'
class BookingForm(forms.ModelForm):
    class Meta:
        model = Booking
        fields = '__all__'
        widgets = {
            'date': forms.DateInput(attrs={'type': 'date'}),
            'start_time': forms.TimeInput(attrs={'type': 'time'}),
            'end_time': forms.TimeInput(attrs={'type': 'time'}),
        }

    def clean_total_price(self):
        total_price = self.cleaned_data.get("total_price")
        return total_price or 0.00  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º 0.00, –µ—Å–ª–∏ –ø–æ–ª–µ –ø—É—Å—Ç–æ–µ

    def clean_items(self):
        items = self.cleaned_data.get("items")
        return items or {}  # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—É—Å—Ç–æ–π —Å–ª–æ–≤–∞—Ä—å, –µ—Å–ª–∏ –Ω–∏—á–µ–≥–æ –Ω–µ—Ç
